import React, {Component} from 'react'
import ReactDOM from 'react-dom'
import PropTypes from 'prop-types'
import {translate} from "react-i18next"
import {connect} from 'react-redux'
import {Helmet} from "react-helmet"
import GoogleAnalytics from 'react-ga'
import Swipeable from 'react-swipeable'
import LiveActions from "../../Redux/LiveRedux"
import './index.css'
import ScrollToTopOnMount from "../../Components/ScrollToTopOnMount"
import Brand from "./Brand"
import Content from "./Content"
import BrandDetail from "./BrandDetail"

class LivePage extends Component {

    constructor(props) {
        super(props)
        const {t} = props
        GoogleAnalytics.set({
            title: t('AB Gaming') + ' : ' + t('livePage')
        })
        props.getLive()
        const chosen = props.location.hash ? props.location.hash.split('#')[1] : 'AG'
        this.state = {
            chosen: chosen,
            distance: 0,
        }
    }

    _goto = (code) => {
        this.props.history.push('/live' + (code !== 'AG' ? '#' + code : ''))
        this.setState({
            chosen: code,
        })
    }

    swipingLeft = (e, absX) => {
        // console.log('left: ', absX)
        const containerWidth = ReactDOM.findDOMNode(this.swipeContainer).getBoundingClientRect().width,
            contentWidth = ReactDOM.findDOMNode(this.contentContainer).getBoundingClientRect().width
        // console.log(containerWidth - contentWidth)
        // console.log(e.target.classList, absX)
        this.setState({
            distance: this.state.distance-absX < containerWidth - contentWidth ? containerWidth - contentWidth : this.state.distance-absX,
        })
    }

    swipingRight = (e, absX) => {
        // console.log('right: ', absX)
        this.setState({
            distance: this.state.distance + absX > 0 ? 0 : this.state.distance + absX,
        })
    }

    onTap = e => e.preventDefault()

    render() {
        const {t, live} = this.props
        return (
            <React.Fragment>
                <Helmet>
                    <title>{t('AB Gaming')} : {t('livePage')}</title>
                    <meta name="description" content={t('livePageMetaDescription')}/>
                    <body className={"live-page"}/>
                </Helmet>
                <ScrollToTopOnMount/>
                <svg style={{width: 0, height: 0, overflow: 'hidden', position: 'fixed', visibility: 'hidden'}}>
                    <symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 72 52" id="icon-lips">
                        <g id="lips" fillRule="evenodd">
                            <path d="M71.6440636,23.6356258 C68.9701026,19.6896026 55.2113589,0 47.7161657,0 C44.8801466,0 42.3358324,2.260658 39.8806502,4.45649427 C38.6976251,5.50984763 36.7124118,7.2762399 35.9993556,7.2762399 C35.1890645,7.2762399 33.0823073,5.42882043 31.8182532,4.3187481 C29.4197914,2.22014449 26.9484034,0.0486162436 24.3311629,0.0486162436 L24.2825454,0.0486162436 C16.7954551,0.137746177 3.03671131,19.7058081 0.354647578,23.6275231 C-0.0586009059,24.235227 -0.115321304,25.0211905 0.208795167,25.6856134 C0.338441752,25.953003 3.44185689,32.2245062 9.34077653,38.5608309 C17.273527,47.0848895 26.4946403,51.5900002 35.9993556,51.5900002 C40.5045744,51.5900002 44.9449699,50.593366 49.1908957,48.6325083 C50.2037596,48.1625508 50.6575225,46.955246 50.1875538,45.9343036 C49.7175849,44.9133612 48.5183539,44.4677117 47.5054899,44.9295667 C43.7862536,46.6473427 39.9130619,47.5143335 35.9912526,47.5143335 C18.1648473,47.5143335 6.94231468,29.477685 4.38179463,24.9158553 C11.4718422,14.7550479 20.8712197,4.16479663 24.3068541,4.12428294 L24.3149571,4.12428294 C25.416953,4.12428294 27.5723274,6.01221609 29.1442925,7.38967805 C31.4617252,9.42345993 33.6576141,11.343804 35.9831497,11.343804 C38.2276563,11.343804 40.3182074,9.4801791 42.5465082,7.50311601 C44.2643254,5.9717024 46.403494,4.06756396 47.7080628,4.06756396 C51.1355944,4.06756396 60.5268689,14.6983289 67.6007107,24.9077526 C66.2637302,27.3061567 62.5444939,33.4399137 56.7428091,38.6904745 C55.9082093,39.4440271 55.8433859,40.7323591 56.5888538,41.5669391 C57.3343217,42.4015189 58.6145817,42.4744433 59.4410788,41.7208906 C67.3981378,34.5175751 71.603549,26.0340302 71.7737101,25.6775107 C72.1140325,25.0292933 72.057312,24.2433297 71.6440636,23.6356258 L71.6440636,23.6356258 Z M58.8414633,26.6336313 C59.3033291,25.6045862 58.8495663,24.4053841 57.8285994,23.9354264 C57.8042906,23.9273237 55.7704598,22.9955112 54.3281415,22.1771369 C48.2833695,18.7496874 43.7943565,20.6133123 40.5126774,21.9745688 C39.0622562,22.5741699 37.8144077,23.0927439 36.7205147,23.0927439 C35.5780042,23.0927439 34.5408315,22.5741699 33.2200568,21.9259526 C30.3192145,20.4836689 26.332582,18.5147087 19.4045927,22.1690341 C17.9379656,22.946895 15.6853563,23.8949129 15.6610475,23.9030156 C14.6319777,24.3405624 14.1458031,25.5316617 14.5752575,26.5688096 C14.8993738,27.3466704 15.6529446,27.8166279 16.4389271,27.8166279 C16.6982202,27.8166279 16.9656163,27.7680117 17.2168065,27.6626763 C17.3140416,27.6221628 19.6557829,26.6336313 21.2763652,25.7747433 C26.3811996,23.0765384 28.7229411,24.235227 31.4293135,25.580278 C33.0093812,26.3581388 34.6380663,27.1684106 36.7124118,27.1684106 C38.616596,27.1684106 40.358722,26.439166 42.0522305,25.7423324 C45.1151311,24.4702058 47.9997676,23.2710036 52.3348253,25.7261269 C53.9310989,26.6255286 56.0621646,27.5978546 56.1512966,27.6464708 C57.1965722,28.1164285 58.3877003,27.6626763 58.8414633,26.6336313 L58.8414633,26.6336313 Z"/>
                        </g>
                    </symbol>
                    <symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 72 72" id="icon-video">
                        <g id="video" fillRule="evenodd">
                            <path d="M69.165563,21.986755 C71.0375277,26.4194261 71.99117,31.134658 72.0000002,36 C72.0000002,40.8565122 71.0551877,45.5717439 69.174393,50.013245 C67.3554085,54.3046359 64.759382,58.1545254 61.4569538,61.4569536 C58.1456954,64.768212 54.2958059,67.3642384 50.0132452,69.174393 C45.5717439,71.0463577 40.8565122,72 36,72 C31.143488,72 26.4282561,71.0551877 21.986755,69.174393 C17.6953643,67.3554084 13.8454748,64.759382 10.5430464,61.4569536 C7.23178814,58.1456954 4.63576162,54.2958057 2.82560709,50.013245 C0.953642388,45.5717439 0,40.8565122 0,36 C0,31.1434878 0.944812414,26.4282561 2.82560709,21.986755 C4.64459161,17.6953643 7.24061813,13.8454746 10.5430464,10.5430464 C13.8454746,7.24061813 17.6953643,4.64459161 21.9779248,2.82560709 C26.4194261,0.953642388 31.1346578,0 35.99117,0 C40.8565122,0 45.5717439,0.953642388 50.004415,2.82560709 C54.2958057,4.64459161 58.1456954,7.24061813 61.4481236,10.5430464 C64.7593818,13.8543046 67.3554084,17.7041943 69.165563,21.986755 Z M66.3664459,48.8211921 C68.0794702,44.759382 68.9536424,40.4415011 68.9536424,35.99117 C68.9536424,31.5408389 68.0883002,27.2229582 66.3664459,23.1611479 C64.7064018,19.2406181 62.3222958,15.7174393 59.3024282,12.6887418 C56.2825607,9.6600442 52.7505519,7.28476825 48.8300221,5.6247241 C44.7682118,3.91169982 40.4503311,3.03752764 36,3.03752764 C31.5496689,3.03752764 27.2317882,3.90286976 23.1699779,5.6247241 C19.2494481,7.28476825 15.7262693,9.6600442 12.6975718,12.6887418 C9.6688742,15.7086093 7.29359824,19.2406181 5.63355407,23.1611479 C3.92052979,27.2229582 3.04635762,31.5408389 3.04635762,35.99117 C3.04635762,40.4415011 3.91169975,44.759382 5.63355407,48.8211921 C7.29359824,52.7417219 9.6688742,56.2649007 12.6975718,59.2935982 C15.7174393,62.3222958 19.2494481,64.6975717 23.1699779,66.3576159 C27.2317882,68.0706402 31.5496689,68.9448124 36,68.9448124 C40.4503311,68.9448124 44.7682118,68.0794702 48.8300221,66.3576159 C52.7505519,64.6975717 56.2737307,62.3222958 59.3024282,59.2935982 C62.3311258,56.2737307 64.7064018,52.7417219 66.3664459,48.8211921 Z M27.2847683,51.1346578 L27.2847683,20.7152319 L48.5827815,37.1125828 L27.2847683,51.1346578 Z"/>
                        </g>
                    </symbol>
                    <symbol preserveAspectRatio="xMidYMax meet" viewBox="0 0 72 72" id="icon-celebrate">
                        <g id="celebrate" fillRule="evenodd">
                            <path d="M36,0 C16.1167499,0 0,16.1167499 0,36 C0,55.881 16.1167499,72 36,72 C55.8832501,72 72,55.881 72,36 C72,16.1167499 55.8832501,0 36,0 Z M36,69.2302499 C17.6467501,69.2302499 2.7675,54.3532499 2.7675,35.9977499 C2.7675,17.6467501 17.649,2.76975 36,2.76975 C54.351,2.76975 69.2325,17.6467501 69.2325,35.9977501 C69.2325,54.3532499 54.351,69.2302499 36,69.2302499 Z M56.0677501,53.73 C55.9027573,53.4150256 55.5376237,53.2612354 55.197,53.3632501 C54.7155,53.487 54.2385,53.6175 53.757,53.7435 C53.5927501,53.7885 53.4285,53.829 53.2575,53.8717499 L50.229,43.0312499 C50.328,42.9525 50.418,42.885 50.5035,42.8107501 C50.8859294,42.4653501 51.2089857,42.0594396 51.4597501,41.6092501 C51.8535,40.9365 52.1325,40.212 52.3417501,39.456 C52.7625,37.9485 52.9132501,36.4005 52.9402501,34.839 C52.9537501,33.8715 52.9177501,32.9085 52.8502501,31.9455 C52.8038912,31.2167992 52.7423779,30.489142 52.6657501,29.763 C52.5757501,28.9755 52.4632501,28.1925 52.3417501,27.4095 C52.1939423,26.4410185 51.9850252,25.4828557 51.7162501,24.5407501 C50.9590414,21.9537427 50.0422854,19.416132 48.9712501,16.9425 C48.5691192,15.9911972 47.513693,15.496982 46.5255,15.7972501 C45.4612501,16.0987501 44.3925,16.3867501 43.3237501,16.6815 C41.7825,17.1045 40.2457501,17.5297501 38.7045,17.9482501 C37.8313286,18.1878345 37.215199,18.967111 37.1835,19.872 C37.179,20.0475 37.1992501,20.223 37.206,20.4007501 C37.2444589,21.0950816 37.320319,21.7868353 37.4332501,22.473 C37.5615,23.2785 37.7055,24.0817501 37.8562501,24.8805 C38.0317501,25.8165 38.2275,26.748 38.5087501,27.657 C39.1072501,29.5987501 39.8227501,31.4977501 40.6125,33.3652501 C41.202,34.758 41.8342501,36.1282501 42.597,37.431 C43.2652501,38.574 43.9762501,39.6855 44.8087501,40.7092501 C45.3037501,41.3212499 45.8437501,41.8905 46.4647501,42.3652501 C46.9935,42.768 47.565,43.0807501 48.213,43.2202501 C48.384,43.2562499 48.5527501,43.2742501 48.7417501,43.3057501 L51.8017501,54.2587501 C51.7007576,54.2867072 51.5995031,54.3137084 51.498,54.3397501 C50.7735,54.5332501 50.0467501,54.7222501 49.3222501,54.9202501 C48.9985976,55.0054242 48.7719283,55.2965929 48.7687501,55.6312501 C48.7505941,55.9707469 48.9586736,56.281491 49.2795,56.394 C49.3087501,56.4052499 49.3402501,56.4165 49.3717501,56.4322499 L49.6732501,56.4322499 C49.9545,56.3535 50.2357501,56.268 50.5192501,56.1937499 C52.1775,55.7527499 53.838,55.3162499 55.4985,54.8797499 C55.7347501,54.8167499 55.9372501,54.711 56.0587501,54.486 C56.0947501,54.4185 56.1172501,54.3442499 56.1487501,54.2722499 L56.1487501,53.9302499 C56.1195,53.8627499 56.0992501,53.7952499 56.0677501,53.73 L56.0677501,53.73 Z M39.366,24.7747501 C39.195,23.7982499 39.015,22.824 38.8687501,21.843 C38.7787501,21.2467499 38.7405,20.6415 38.6887501,20.0385 C38.6595,19.7145 38.817,19.5142499 39.1432501,19.4242499 L41.913,18.6637501 L46.8405,17.3137501 C46.9237501,17.2912501 47.0115,17.2665 47.0992501,17.262 C47.3377501,17.2507501 47.5155,17.3677501 47.61,17.5972501 C47.9362501,18.396 48.2715,19.1947501 48.5865,19.998 C49.158,21.465 49.6755,22.9522499 50.1255,24.4642501 L50.1795,24.6622499 L39.492,25.3822499 C39.4492501,25.1752499 39.402,24.9772499 39.366,24.7747501 L39.366,24.7747501 Z M35.1225,17.91 C32.5575,17.1967501 29.9857501,16.497 27.4162499,15.7905 C27.2362499,15.741 27.0517499,15.7005 26.8695,15.6555 L26.5702499,15.6555 C26.5275,15.6667501 26.4847499,15.6825 26.4442499,15.6892501 C25.7130845,15.7931826 25.0960887,16.28609 24.8332501,16.9762501 L24.768,17.1337501 C24.2075304,18.444096 23.6897575,19.7722958 23.2155,21.1162501 C22.7632499,22.383 22.338,23.6565 22.0005,24.957 C21.4987499,26.8695 21.24,28.8225 21.069,30.7912501 C20.9992499,31.5742501 20.9655,32.364 20.9295,33.1492501 C20.8665,34.4002501 20.8867499,35.6467501 21.024,36.8932501 C21.123,37.7977501 21.2782499,38.6887501 21.5347499,39.5595 C21.7867499,40.4212501 22.1265,41.2447499 22.6417499,41.9827501 C22.9342499,42.4035 23.265,42.786 23.7082499,43.0492501 C23.7172499,43.0537499 23.7195,43.0672499 23.7262499,43.0852501 L20.7675,53.7322501 L20.6505,53.7052501 C20.1037501,53.5635 19.5615,53.424 19.0215,53.2755 C18.6241155,53.158736 18.2067619,53.3834651 18.0855,53.7795 C18.0765,53.8222501 18.0427499,53.856 18.0225,53.8965 L18.0225,54.135 C18.0405,54.162 18.0675,54.1867501 18.0787499,54.2182501 C18.1732499,54.5422501 18.396,54.7065 18.7065,54.7875 C20.4165,55.2375 22.1265,55.692 23.8365,56.1465 C24.057,56.2027499 24.2775,56.2657501 24.498,56.3197501 C24.7255133,56.3794479 24.9678529,56.3295142 25.1532348,56.1847397 C25.3386169,56.0399651 25.4457869,55.8169486 25.443,55.5817499 C25.4534272,55.2249234 25.2135516,54.9091498 24.867,54.8235 C24.2572499,54.6592499 23.6497501,54.5017499 23.0422499,54.3397499 L22.2232499,54.1215 L25.2427499,43.254 C25.3822499,43.2292499 25.5037499,43.209 25.623,43.182 C26.2665,43.047 26.829,42.7365 27.3555,42.3405 C27.9877499,41.8635 28.53,41.292 29.0272501,40.6755 C30.1927501,39.222 31.1647499,37.6425 32.0107501,35.9752499 C32.8882501,34.2315 33.6307501,32.4247501 34.3147501,30.591 C34.9402501,28.908 35.523,27.2092501 35.8672501,25.434 C36.2047501,23.715 36.5332501,21.9982501 36.6412501,20.2477501 C36.6547501,20.025 36.6682501,19.7977501 36.6277501,19.5817501 C36.4635,18.711 35.9617501,18.1395 35.1225,17.9077501 L35.1225,17.91 Z M35.154,19.962 C35.1135,20.4232501 35.0865,20.8845 35.0347501,21.3435 C34.9087501,22.4145 34.7197501,23.4742501 34.515,24.5317501 L34.47,24.732 L23.841,24.0165 L23.9422501,23.6722501 C24.5812501,21.6652501 25.317,19.6987501 26.1405,17.7637501 C26.1675,17.7052501 26.19,17.649 26.2125,17.5905 C26.334,17.2867501 26.5725,17.163 26.883,17.2417499 C27.1282501,17.3047501 27.3667501,17.3722501 27.6097501,17.4397501 L34.6905,19.3837501 C34.8255,19.4197501 34.9447501,19.4715 35.0347501,19.5817501 C35.1247501,19.6942501 35.1652501,19.8202501 35.154,19.9642501 L35.154,19.962 Z"/>
                        </g>
                    </symbol>
                </svg>
                {/*<var className="css-data-holder"/>*/}
                <div className="nav-spacer menu-spacer"/>
                <div className={`dimming-chooser dimming-chooser--active`}>
                    <div className="dimming-chooser__overlay"/>
                    <div className={`brands-wrapper`}>
                        <div className={`container`} ref={r => this.swipeContainer = r} style={{
                            WebkitTransform: 'translateX('+this.state.distance+'px)',
                            MozTransform: 'translateX('+this.state.distance+'px)',
                            msTransform: 'translateX('+this.state.distance+'px)',
                            transform: 'translateX('+this.state.distance+'px)',
                        }}>
                            <div className={`brands-container cf`} ref={r=>this.contentContainer = r}>
                                <div className={`game-details__loading${live.fetching && !live.data ? '' : ' ng-hide'}`}>
                                    <i className={`spinner--big spinner--big-light${live.fetching && !live.data? ' is-spinning' : ''}`}/>
                                </div>
                                <Swipeable
                                    className={`brands-in${live.fetching && !live.data ? ' ng-hide' : ''}`}
                                    onSwipingLeft={this.swipingLeft}
                                    onSwipingRight={this.swipingRight}
                                    preventDefaultTouchmoveEvent
                                    stopPropagation
                                    delta={10}
                                >
                                    {!!live.data && live.data.map((b) => {
                                        return <Brand
                                            key={b.code}
                                            brand={b}
                                            goto={this._goto}
                                            current={this.state.chosen}
                                        />
                                    })}
                                </Swipeable>
                            </div>
                        </div>
                    </div>
                </div>
                <BrandDetail
                    brands={live.data||[]}
                    selected={this.state.chosen}
                    favorite={this.props.favorite}
                    isLoading={live.fetching && !live.data}
                />
                <Content/>
            </React.Fragment>
        )
    }
}

LivePage.propTypes = {
    live: PropTypes.object.isRequired,
    getLive: PropTypes.func.isRequired,
    favorite: PropTypes.object.isRequired,
}

const mapStateToProps = (state) => {
    return {
        live: state.live,
        favorite: state.favorite,
    }
}

const mapDispatchToProps = (dispatch) => ({
    getLive: () => dispatch(LiveActions.liveRequest()),
})

export default connect(mapStateToProps, mapDispatchToProps)(translate()(LivePage))